# This is a basic workflow to help you get started with Actions
name: Main.yaml

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches: [ main ]

env:

  AWS_REGION              :    "ap-south-1" #Change to reflect your Region
  PREFIX                  :    "hl-ps"
  ENVIRONMENT             :    "dev"
  APINAME                 :    "DeDupe"
  TASK_EXECUTION_ARN      :    "arn:aws:iam::163437804291:role/ecs-task-role1-stage"
  REPOSITORY_URI          :    "163437804291.dkr.ecr.ap-south-1.amazonaws.com/grafana-repo"
  ECS_CLUSTER             :    "blue-green-cluster-stage"
  ECS_SERVICE             :    "blue-green-service-stage"
  CODE_DEPLOY_APP         :    "blue-green-app-stage"
  CODE_DEPLOY_GROUP       :    "blue-green-deployment-stage"  

# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  SourceCheckoutMain:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: FindDir
        run: |
             pwd
             ls -la

      - name: Upload Source Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SourceArtifacts
          path: /home/runner/work/hdfc-life-cdk-infra-repo/hdfc-life-cdk-infra-repo

        
  GnerateChangeSetMain:
    runs-on: ubuntu-latest
    needs: SourceCheckoutMain
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::163437804291:role/hdfc-life-cdk-infra-repo #change to reflect your IAM role’s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Download Source Artifacts
        uses: actions/download-artifact@v4
        with:
          name: SourceArtifacts

      - name: Generate ChangeSet
        run: |
               echo "Installing CDK..."
               npm install -g aws-cdk@2.146.0
               echo "Printing CDK version"
               # cdk --version


               # echo "Installing Python dependencies..."
               # pip install -r requirements.txt

               # echo Build started on `date`
               # echo "Building CDK stack..."
               # ENV=$ENVIRONMENT cdk diff
               

  ManualApprovalMain:
    name: Manual Approval
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Wait
        run: |
               sleep 10
    needs: [SourceCheckoutMain, GnerateChangeSetMain]


  DeployChangeSetMain:
    runs-on: ubuntu-latest
    needs: [ SourceCheckoutMain, GnerateChangeSetMain, ManualApprovalMain ] 
    environment: test-deploy

    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::163437804291:role/hdfc-life-cdk-infra-repo #change to reflect your IAM role’s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Download Source Artifacts
        uses: actions/download-artifact@v4
        with:
          name: SourceArtifacts

      - name: Deploy ChangeSet
        run: |
               echo "Installing CDK..."
               sudo npm install i -g aws-cdk@latest

               echo "Installing Python dependencies..."
               pip install -r requirements.txt

               echo Build started on `date`
               echo "Building CDK stack..."
               ENV=$ENVIRONMENT cdk deploy

  
